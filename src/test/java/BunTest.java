import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;
import praktikum.Bun;


@RunWith(Parameterized.class)
public class BunTest {
    private final String expectedName;
    private final float expectedPrice;
    private Bun bun;

    public BunTest(String expectedName, float expectedPrice) {
        this.expectedName = expectedName;
        this.expectedPrice = expectedPrice;
    }

    @Parameterized.Parameters
    public static Object[][] bunParams() {
        return new Object[][]{
                {"–§–ª—é–æ—Ä–µ—Å—Ü–µ–Ω—Ç–Ω–∞—è –±—É–ª–∫–∞ R2-D3", 988},
                {"–ö—Ä–∞—Ç–æ—Ä–Ω–∞—è –±—É–ª–∫–∞ N-200i", 1255},
                {"–õ—é–±–∞—è –¥—Ä—É–≥–∞—è –±—É–ª–∫–∞", 1567},
                {"", 1234},
                {"üòÄ", 1234},
                {null, 5678},
                {"1", 1234}, //–º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤
                //—Å—Ç—Ä–æ–∫–∞ 100 —Å–∏–º–≤–æ–ª–æ–≤
                {"T–òi–¶–°HOPgdv–óZHsZtezAurdroEz–ï–§–òq–†–õva–©–êod–Ø–ùCPGg–íA–îf–ë–êC–†x–ûm–™–óPU–®l–ú–†h–ïaUDet–£s–¨s–õuDnJQUTLYjmqr–Ø–ïd–ùw–ót–´yaD", 9101},
                {"!@#$%^^&**()+_=", 12134},
                {"–§–ª—é–æ—Ä–µ—Å—Ü–µ–Ω—Ç–Ω–∞—è –±—É–ª–∫–∞ R2-D3", -988},
                {"–ö—Ä–∞—Ç–æ—Ä–Ω–∞—è –±—É–ª–∫–∞ N-200i", 0},
                {"–õ—é–±–∞—è –¥—Ä—É–≥–∞—è –±—É–ª–∫–∞", Float.MIN_VALUE}, //–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞
                {"–õ—é–±–∞—è –¥—Ä—É–≥–∞—è –±—É–ª–∫–∞", Float.MAX_VALUE}, //–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞

        };
    }

    @Test
    public void GetNameTest() {
        bun = new Bun(expectedName, expectedPrice);
        Assert.assertEquals(expectedName, bun.getName());
    }

    @Test
    public void GetPriceTest() {
        bun = new Bun(expectedName, expectedPrice);
        Assert.assertEquals(expectedPrice, bun.getPrice(), 0);
    }
}